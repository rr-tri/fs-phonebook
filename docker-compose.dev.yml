services:
  frontend:
    image: app-dev
    build:
      context: ./frontend # The context will pick this directory as the "build context"
      dockerfile: dev.Dockerfile # This will simply tell which dockerfile to read
    volumes:
      - ./frontend:/usr/src/app/app # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
    # ports:
    #   - 3000:3000
    container_name: app # This will name the container hello-front-dev
  mongo:
    image: mongo:4.4.16 # Cause my current system does not appear to have CPU with AVX support to have mongo:latest
    ports:
      - 3456:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./backend/mongo_data:/data/db
  backend:
    image: server-dev
    build:
      context: ./backend
      dockerfile: ./dev.Dockerfile
    # ports:
    #   - 3003:3003
    volumes:
      - ./backend:/usr/src/app
    container_name: server
    environment:
      - PORT=3003
      - MONGO_URL=mongodb://the_username:the_password@host.docker.internal:3456/the_database
  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
    depends_on:
      - frontend
      - backend
